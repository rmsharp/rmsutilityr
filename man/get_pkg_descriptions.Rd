% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_pkg_descriptions.R
\name{get_pkg_descriptions}
\alias{get_pkg_descriptions}
\title{Provides a dataframe of package description fields}
\usage{
get_pkg_descriptions(
  pkgs = NULL,
  lib.loc = NULL,
  fields = NULL,
  base = FALSE,
  dependencies = FALSE,
  which = c("Depends", "Imports", "LinkingTo"),
  recursive = TRUE,
  reverse = FALSE,
  verbose = getOption("verbose"),
  new_cran_db = FALSE,
  get_cran_db = NULL
)
}
\arguments{
\item{pkgs}{character vector of package names. Defaults to packages found with
sessionInfo().}

\item{lib.loc}{a character vector of directory names of R libraries, or NULL. 
The default value of NULL corresponds to all libraries currently known. 
If the default is used, the loaded packages and namespaces are searched 
before the libraries.}

\item{fields}{a character vector giving the tags of fields to return. 
The field "Package" is always returned.  
If other fields occur in the DESCRIPTION file, they are ignored. 
Possible fields include "Package", "Version", "Priority", "Depends", 
"Imports", "LinkingTo", "Suggests", "Enhances", "License", 
"License_is_FOSS", "License_restricts_use", "OS_type", "Archs", "MD5sum", 
"NeedsCompilation", "File", and "Repository".}

\item{base}{logical value if TRUE base packages are included}

\item{dependencies}{logical value if TRUE, dependencies are recursively 
added.}

\item{which}{a character vector listing the types of dependencies, 
a subset of c("Depends", "Imports", "LinkingTo", "Suggests", "Enhances").
Character string "all" is shorthand for that vector, character string 
"most" for the same vector without "Enhances".}

\item{recursive}{logical: should (reverse) dependencies of (reverse)
dependencies (and so on) be included?}

\item{reverse}{logical: if FALSE (default), regular dependencies are 
calculated, otherwise reverse dependencies.}

\item{verbose}{logical indicating if output should monitor the 
package search cycles.}

\item{new_cran_db}{logical variable when set to TRUE causes the function to 
perform a get from CRAN to get a fresh copy of the database. Default
is \code{FALSE}.}

\item{get_cran_db}{function to return a cran or cran like database. If
left \code{NULL}, it will be defined with     
get_cran_db <- get_cran_db_factory(new_cran_db = new_cran_db)}
}
\value{
dataframe with p
}
\description{
Provides a dataframe of package description fields
}
\examples{
\dontrun{
write.csv(get_pkg_descriptions(base = TRUE)$pkg_df, 
          file = file.path(tempdir(), "package_list.csv"), 
          row.names = FALSE, quote = FALSE)
}
}
